<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.prince.myproj.spider.dao.novel.NovelDao">
    <resultMap id="NovelModelResultMap" type="NovelDaoModel">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="cate" property="cate" jdbcType="VARCHAR" />
        <result column="page_url" property="pageUrl" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="DATE" />
    </resultMap>

    <insert id="save"
            parameterType="NovelDaoModel"
            useGeneratedKeys="true" keyProperty="id">
        insert into novel(
        <trim suffixOverrides=",">
            <if test="id != null"> id ,</if>
            <if test="content != null"> content ,</if>
            <if test="title != null"> title ,</if>
            <if test="cate != null"> cate ,</if>
            <if test="pageUrl != null"> page_url ,</if>
            <if test="createTime != null"> create_time ,</if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            <if test="id != null"> #{id} ,</if>
            <if test="content != null"> #{content} ,</if>
            <if test="title != null"> #{title} ,</if>
            <if test="cate != null"> #{cate} ,</if>
            <if test="pageUrl != null"> #{pageUrl} ,</if>
            <if test="createTime != null"> #{createTime} ,</if>
        </trim>
        )
    </insert>

    <!--<update id="update" parameterType="TestModel">-->
        <!--update  test-->
        <!--<trim prefix="set" suffixOverrides=",">-->
            <!--<if test="content != null"> content = #{content} ,</if>-->
            <!--<if test="createTime != null"> create_time = #{createTime} ,</if>-->
        <!--</trim>-->
        <!--where id = #{id}-->
    <!--</update>-->
    <!--<delete id="delete" parameterType="DailyModel">-->
        <!--delete from daily-->
        <!--where 1=0-->
        <!--<if test="id != null">-->
            <!--or id = #{id}-->
        <!--</if>-->
    <!--</delete>-->

    <!--<select id="getDailyById" parameterType="map"  resultMap="DailyModelResultMap">-->
        <!--select * from daily s-->
        <!--<where>-->
            <!--1 = 1-->
            <!--<if test="id != null">-->
                <!--and s.id = #{id}-->
            <!--</if>-->
        <!--</where>-->
    <!--</select>-->

    <!--<select id="getDailyList" parameterType="map"  resultMap="DailyModelResultMap">-->
        <!--select id,title from daily s-->
        <!--order by id desc-->
        <!--<if test="fromIndex != null and toIndex != null">-->
            <!--limit #{fromIndex}, #{toIndex}-->
        <!--</if>-->
    <!--</select>-->

    <select id="getAllCount" resultType="Integer">
        select count(*) from novel

    </select>

</mapper>